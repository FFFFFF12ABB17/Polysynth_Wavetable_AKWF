#include "AKWF_0124_samples.h"

static const uint32_t sample_0_AKWF_0124_AKWF_0124[384] = {
0x06e401e7,0x10470bad,0x18f014b2,0x20ed1d04,0x284d24b1,0x2f1a2bc4,0x355f324b,0x3b283852,
0x407e3de1,0x45694302,0x49f547bd,0x4e274c17,0x5203501d,0x559453d6,0x58e05740,0x5be85a68,
0x5eb25d54,0x61486003,0x63aa627f,0x65dd64c6,0x67e266e3,0x69c168d6,0x6b7b6aa1,0x6d116c49,
0x6e886dd2,0x6fe46f3a,0x71237086,0x724a71b9,0x735a72d5,0x745573da,0x753b74cc,0x761275aa,
0x76d87675,0x778c7732,0x783577e2,0x78ce7882,0x795b7919,0x79df79a2,0x7a597a20,0x7acc7a93,
0x7b327afd,0x7b917b62,0x7be87bbd,0x7c377c13,0x7c847c61,0x7cc97ca8,0x7d077ceb,0x7d427d28,
0x7d7a7d60,0x7dac7d93,0x7dda7dc3,0x7e037df0,0x7e2b7e18,0x7e507e3e,0x7e727e60,0x7e917e7f,
0x7eab7e9f,0x7ec77eba,0x7edf7ed2,0x7ef57ee9,0x7f077f00,0x7f1b7f15,0x7f2e7f26,0x7f407f35,
0x7f4d7f44,0x7f5b7f54,0x7f687f61,0x7f757f6b,0x7f7e7f77,0x7f897f82,0x7f907f8c,0x7f997f96,
0x7fa27f9d,0x7fa97fa4,0x7fb07fab,0x7fb67fb1,0x7fbc7fb7,0x7fc07fbd,0x7fc47fc3,0x7fc97fc7,
0x7fcf7fcb,0x7fd27fcd,0x7fd67fd1,0x7fd67fd7,0x7fda7fda,0x7fdd7fdd,0x7fdf7fdf,0x7fe37fe1,
0x7fe57fe3,0x7fe67fe5,0x7fe77fe9,0x7feb7fe9,0x7fec7fea,0x7fed7feb,0x7fed7fee,0x7fed7ff0,
0x7ff07ff2,0x7ff27ff1,0x7ff47ff1,0x7ff37ff2,0x7ff47ff4,0x7ff67ff4,0x7ff67ff6,0x7ff87ff6,
0x7ff87ff4,0x7ff67ff8,0x7ff77ff9,0x7ff67ffa,0x7ff77ffb,0x7ff77ffb,0x7ff97ffb,0x7ffa7ff9,
0x7ffb7ff9,0x7ffa7ffa,0x7ffa7ffa,0x7ff97ffd,0x7ffa7ffd,0x7ffb7ffb,0x7ffa7ffd,0x7ffb7ffd,
0x7ffb7ffd,0x7ffd7ffb,0x7ffb7ffd,0x7ffd7ffd,0x7ffe7ffb,0x7ffd7ffb,0x7ffa7ffe,0x7ffb7fff,
0x7ffe7ffd,0x7fff7ffb,0x7ff47ffb,0x7f0c7fb1,0x7cb07e08,0x79177b0a,0x743376d0,0x6d0e7123,
0x619f67a1,0x552b5b7b,0x48514ec6,0x3b3c41c8,0x2df1349e,0x20a4273d,0x142e1a48,0x08af0e54,
0xfe18034a,0xf452f91b,0xeb4cefb8,0xe2fce70f,0xdb51df10,0xd43bd7b1,0xcdb3d0e6,0xc7accaa1,
0xc21ec4d7,0xbcffbf82,0xb844ba94,0xb3e5b60c,0xafe1b1db,0xac2dadfb,0xa8c0aa6a,0xa596a720,
0xa2aca419,0x9ffca14c,0x9d839eb8,0x9b399c55,0x991d9a23,0x9727981f,0x955c9641,0x93b59486,
0x922d92ef,0x90c69178,0x8f7b901b,0x8e488edb,0x8d2d8db4,0x8c268ca5,0x8b348bab,0x8a568ac5,
0x898a89ee,0x88cb892a,0x881f8874,0x878087ca,0x86e88730,0x866086a3,0x85e0861f,0x856c85a7,
0x85028537,0x849e84ce,0x84428470,0x83ee8416,0x839f83c7,0x8358837c,0x83168337,0x82da82f6,
0x82a182bc,0x826e8285,0x823e8253,0x82128225,0x81e881fb,0x81c381d5,0x81a081af,0x8180818f,
0x81618170,0x81488154,0x812e8138,0x81178121,0x8100810b,0x80ec80f8,0x80dc80e4,0x80cb80d1,
0x80ba80c2,0x80ac80b3,0x809e80a5,0x8091809b,0x8088808e,0x807c8083,0x80748079,0x806b806f,
0x80638067,0x805b8060,0x80548058,0x804e8051,0x8048804b,0x80438046,0x8040803e,0x8039803b,
0x80358037,0x80308033,0x802e802f,0x802a802a,0x80268029,0x80238027,0x80218023,0x801f8021,
0x801d801d,0x801b801b,0x8017801a,0x8015801a,0x80148019,0x80148015,0x80138014,0x80138010,
0x80108010,0x8012800e,0x8010800c,0x800e800c,0x800c800d,0x800c800c,0x800a800c,0x800c8009,
0x800c8008,0x800a8007,0x80088008,0x80078009,0x80088008,0x80078007,0x80078007,0x80078006,
0x80068006,0x80058007,0x80078006,0x80068003,0x80038006,0x80058006,0x80058005,0x80058005,
0x80058003,0x80038005,0x80058003,0x80058003,0x80058002,0x80038003,0x80038003,0x80058003,
0x80038002,0x80038003,0x80038002,0x80038003,0x80038002,0x80058002,0x80028002,0x80028003,
0x80028003,0x80038002,0x80028002,0x80028003,0x80038002,0x80028002,0x804e800d,0x81f980f3,
0x84f6834e,0x892f86e8,0x8edc8bcb,0x985d92f1,0xa4849e5f,0xb137aad5,0xbe34b7b0,0xcb60c4c5,
0xd8c3d20c,0xe5b9df59,0xf1adebce,0xfcb5f74e,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,
};

static const AudioSynthWavetable::sample_data AKWF_0124_samples[1] = {
	{
		(int16_t*)sample_0_AKWF_0124_AKWF_0124, // sample
		true, // LOOP
		10, // LENGTH_BITS
		(1 << (32 - 10)) * WAVETABLE_CENTS_SHIFT(0) * 44100.0 / WAVETABLE_NOTE_TO_FREQUENCY(60) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)601 - 1) << (32 - 10), // MAX_PHASE
		((uint32_t)600 - 1) << (32 - 10), // LOOP_PHASE_END
		(((uint32_t)600 - 1) << (32 - 10)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(2399.11 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(0.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
};

static const uint8_t AKWF_0124_ranges[] = {127, };

const AudioSynthWavetable::instrument_data AKWF_0124 = {1, AKWF_0124_ranges, AKWF_0124_samples };
