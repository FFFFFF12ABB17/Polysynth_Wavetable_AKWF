#include "AKWF_0074_samples.h"

static const uint32_t sample_0_AKWF_0074_AKWF_0074[384] = {
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x12490000,0x12491249,0x12491249,0x12491249,0x12491249,0x12491249,0x12491249,0x12491249,
0x24921249,0x24922492,0x24922492,0x24922492,0x24922492,0x24922492,0x24922492,0x24922492,
0x24922492,0x36db36db,0x36db36db,0x36db36db,0x36db36db,0x36db36db,0x36db36db,0x36db36db,
0x36db36db,0x36db36db,0x477136db,0x49244924,0x49244924,0x49244924,0x49244924,0x49244924,
0x49244924,0x49244924,0x49244924,0x49244924,0x49244924,0x49244924,0x49244924,0x5b6d5b6d,
0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,
0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,
0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,
0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,
0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,
0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x5b6d5b6d,0x49244924,
0x49244924,0x49244924,0x49244924,0x49244924,0x49244924,0x49244924,0x49244924,0x49244924,
0x49244924,0x49244924,0x49244924,0x36db36db,0x36db36db,0x36db36db,0x36db36db,0x36db36db,
0x36db36db,0x36db36db,0x36db36db,0x36db36db,0x249236db,0x24922492,0x24922492,0x24922492,
0x24922492,0x24922492,0x24922492,0x24922492,0x24922492,0x12491249,0x12491249,0x12491249,
0x12491249,0x12491249,0x12491249,0x12491249,0x12491249,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xedb70000,0xedb7edb7,0xedb7edb7,
0xedb7edb7,0xedb7edb7,0xedb7edb7,0xedb7edb7,0xedb7edb7,0xedb7edb7,0xdb6edb6e,0xdb6edb6e,
0xdb6edb6e,0xdb6edb6e,0xdb6edb6e,0xdb6edb6e,0xdb6edb6e,0xdb6edb6e,0xdb6edb6e,0xc925db6e,
0xc925c925,0xc925c925,0xc925c925,0xc925c925,0xc925c925,0xc925c925,0xc925c925,0xc925c925,
0xc925c925,0xc925c925,0xb6dcc925,0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,
0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,
0xa493b6dc,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,
0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,
0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,
0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0x924a924a,0x924a924a,0x924a924a,
0x924a924a,0x924a924a,0x924a924a,0x924a924a,0x924a924a,0x924a924a,0x924a924a,0x924a924a,
0x924a924a,0xa493924a,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,
0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,
0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,
0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xa493a493,0xb6dcb6dc,0xb6dcb6dc,
0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,
0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,0xb6dcb6dc,0xc925b6dc,0xc925c925,0xc925c925,
0xc925c925,0xc925c925,0xc925c925,0xc925c925,0xc925c925,0xc925c925,0xc925c925,0xc925c925,
0xc925c925,0xdb6ec925,0xdb6edb6e,0xdb6edb6e,0xdb6edb6e,0xdb6edb6e,0xdb6edb6e,0xdb6edb6e,
0xdb6edb6e,0xdb6edb6e,0xdb6edb6e,0xedb7db6e,0xedb7edb7,0xedb7edb7,0xedb7edb7,0xedb7edb7,
0xedb7edb7,0xedb7edb7,0xedb7edb7,0xedb7edb7,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,
};

static const AudioSynthWavetable::sample_data AKWF_0074_samples[1] = {
	{
		(int16_t*)sample_0_AKWF_0074_AKWF_0074, // sample
		true, // LOOP
		10, // LENGTH_BITS
		(1 << (32 - 10)) * WAVETABLE_CENTS_SHIFT(0) * 44100.0 / WAVETABLE_NOTE_TO_FREQUENCY(60) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)601 - 1) << (32 - 10), // MAX_PHASE
		((uint32_t)600 - 1) << (32 - 10), // LOOP_PHASE_END
		(((uint32_t)600 - 1) << (32 - 10)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(2399.11 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(0.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
};

static const uint8_t AKWF_0074_ranges[] = {127, };

const AudioSynthWavetable::instrument_data AKWF_0074 = {1, AKWF_0074_ranges, AKWF_0074_samples };
