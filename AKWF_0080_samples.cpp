#include "AKWF_0080_samples.h"

static const uint32_t sample_0_AKWF_0080_AKWF_0080[384] = {
0x0334018d,0x068204db,0x09cd0828,0x0d150b71,0x105a0eb7,0x139611f9,0x16ce1534,0x19fd1866,
0x1d261b92,0x20431eb6,0x235921d0,0x266624e1,0x296727e7,0x2c5f2ae4,0x2f4b2dd7,0x322e30be,
0x3505339a,0x37d1366d,0x3a913933,0x3d473bed,0x3ff13e9d,0x428f4141,0x452043d9,0x47a74665,
0x4a1f48e4,0x4c8e4b57,0x4eed4dbf,0x5142501a,0x53895268,0x55c354a9,0x57f156dc,0x5a115903,
0x5c245b1d,0x5e2a5d28,0x60215f27,0x620a6118,0x63e562fa,0x65b264cd,0x67726693,0x6923684b,
0x6ac369f5,0x6c576b8f,0x6dda6d1b,0x6f506e98,0x70b67004,0x720c7163,0x735472b2,0x748c73f1,
0x75b47522,0x76cd7642,0x77d67753,0x78d07855,0x79b97945,0x7a937a28,0x7b5d7afa,0x7c187bbc,
0x7cc17c6e,0x7d5b7d10,0x7de67da3,0x7e607e26,0x7ecb7e98,0x7f267efa,0x7f717f4d,0x7fad7f90,
0x7fd87fc4,0x7ff37fe8,0x7fff7ffc,0x7ffd7fff,0x7feb7ff7,0x7fc97fdb,0x7f977fb2,0x7f567f78,
0x7f077f30,0x7ea87ed9,0x7e437e76,0x7dd97e0f,0x7d687da1,0x7cf17d2d,0x7c767cb4,0x7bf87c38,
0x7b777bb9,0x7af07b34,0x7a637aab,0x79d27a1b,0x79387987,0x789878ea,0x77f07845,0x773e7798,
0x768076e1,0x75b7761c,0x74e1754d,0x74087474,0x7332739c,0x725772c4,0x717a71e9,0x709f710d,
0x6fc47032,0x6eeb6f58,0x6e0e6e7d,0x6d306d9f,0x6c4d6cbf,0x6b656bdb,0x6a786aef,0x698369fe,
0x68846904,0x677a6800,0x666266ef,0x653c65d1,0x640664a4,0x62c16366,0x61686215,0x5ffd60b4,
0x5e7f5f40,0x5cee5db9,0x5b4c5c1f,0x59965a73,0x57ce58b5,0x55f456e3,0x54095501,0x520c530d,
0x50005109,0x4de54ef4,0x4bb94cd1,0x497f4a9d,0x4738485e,0x44e34610,0x428343b5,0x4016414e,
0x3da03edd,0x3b1e3c5f,0x389239d8,0x35fd3747,0x335f34ae,0x30b9320d,0x2e0d2f64,0x2b562cb4,
0x288f29f5,0x25ba2726,0x22d9244c,0x1fe92163,0x1ceb1e6d,0x19de1b66,0x16c41853,0x139e1532,
0x10711209,0x0d370ed5,0x09f80b98,0x06b20855,0x0368050e,0x001a01c1,0xfcccfe73,0xf97efb25,
0xf633f7d8,0xf2ebf48f,0xefa6f149,0xec6aee07,0xe932eacc,0xe603e79a,0xe2dae46e,0xdfbde14a,
0xdca7de30,0xd99adb1f,0xd699d819,0xd3a1d51c,0xd0b5d229,0xcdd2cf42,0xcafbcc66,0xc82fc993,
0xc56fc6cd,0xc2b9c413,0xc00fc163,0xbd71bebf,0xbae0bc27,0xb859b99b,0xb5e1b71c,0xb372b4a9,
0xb113b241,0xaebeafe6,0xac77ad98,0xaa3dab57,0xa80fa924,0xa5efa6fd,0xa3dca4e3,0xa1d6a2d8,
0x9fdfa0d9,0x9df69ee8,0x9c1b9d06,0x9a4e9b33,0x988e996d,0x96dd97b5,0x953d960b,0x93a99471,
0x922692e5,0x90b09168,0x8f4a8ffc,0x8df48e9d,0x8cac8d4e,0x8b748c0f,0x8a4c8ade,0x893389be,
0x882a88ad,0x873087ab,0x864786bb,0x856d85d8,0x84a38506,0x83e88444,0x833f8392,0x82a582f0,
0x821a825d,0x81a081da,0x81358168,0x80da8106,0x808f80b3,0x80538070,0x8028803c,0x800d8018,
0x80018004,0x80038001,0x80158009,0x80378025,0x8069804e,0x80aa8088,0x80f980d0,0x81588127,
0x81bd818a,0x822781f1,0x8298825f,0x830f82d3,0x838a834c,0x840883c8,0x84898447,0x851084cc,
0x859d8555,0x862e85e5,0x86c88679,0x87688716,0x881087bb,0x88c28868,0x8980891f,0x8a4989e4,
0x8b1f8ab3,0x8bf88b8c,0x8cce8c64,0x8da98d3c,0x8e868e17,0x8f618ef3,0x903c8fce,0x911590a8,
0x91f29183,0x92d09261,0x93b39341,0x949b9425,0x95889511,0x967d9602,0x977c96fc,0x98869800,
0x999e9911,0x9ac49a2f,0x9bfa9b5c,0x9d3f9c9a,0x9e989deb,0xa0039f4c,0xa181a0c0,0xa312a247,
0xa4b4a3e1,0xa66aa58d,0xa832a74b,0xaa0ca91d,0xabf7aaff,0xadf4acf3,0xb000aef7,0xb21bb10c,
0xb447b32f,0xb681b563,0xb8c8b7a2,0xbb1db9f0,0xbd7dbc4b,0xbfeabeb2,0xc260c123,0xc4e2c3a1,
0xc76ec628,0xca03c8b9,0xcca1cb52,0xcf47cdf3,0xd1f3d09c,0xd4aad34c,0xd771d60b,0xda46d8da,
0xdd27dbb4,0xe017de9d,0xe315e193,0xe622e49a,0xe93ce7ad,0xec62eace,0xef8fedf7,0xf2c9f12b,
0xf608f468,0xf94ef7ab,0xfc98faf2,0xffe6fe3f,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,
};

static const AudioSynthWavetable::sample_data AKWF_0080_samples[1] = {
	{
		(int16_t*)sample_0_AKWF_0080_AKWF_0080, // sample
		true, // LOOP
		10, // LENGTH_BITS
		(1 << (32 - 10)) * WAVETABLE_CENTS_SHIFT(0) * 44100.0 / WAVETABLE_NOTE_TO_FREQUENCY(60) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)601 - 1) << (32 - 10), // MAX_PHASE
		((uint32_t)600 - 1) << (32 - 10), // LOOP_PHASE_END
		(((uint32_t)600 - 1) << (32 - 10)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(2399.11 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(0.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
};

static const uint8_t AKWF_0080_ranges[] = {127, };

const AudioSynthWavetable::instrument_data AKWF_0080 = {1, AKWF_0080_ranges, AKWF_0080_samples };
