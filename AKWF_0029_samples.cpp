#include "AKWF_0029_samples.h"

static const uint32_t sample_0_AKWF_0029_AKWF_0029[384] = {
0x01150088,0x023a01af,0x034a02cb,0x03c3038e,0x040703e7,0x04010413,0x03a303db,0x033b037f,
0x02ad02fa,0x02400261,0x01ca0208,0x01560198,0x01330121,0x00ce0104,0x00b700e0,0x00ae00ae,
0x00a80099,0x0088008d,0x008a009c,0x008a008a,0x00820085,0x007c0079,0x007c007c,0x00700076,
0x00520064,0x005b006d,0x00670046,0x00320052,0x00490041,0x002f004f,0x00490023,0x002f0026,
0x001d0032,0x00290038,0x00200023,0x00230029,0x001d001d,0x00260011,0x00000020,0x0017001a,
0x00260011,0x00170014,0xfffe0002,0x000b001a,0x0023000e,0xfffe0000,0x00000020,0x0014000e,
0x0014fff8,0xfff5000b,0x00080011,0x001d0002,0xfffe0000,0x0011000b,0x006affec,0xddf4f789,
0x17d3e6df,0x02281c25,0x066000e6,0x0bbe09b3,0x08af0a70,0x04d90686,0x01010324,0xfbf9fea7,
0xf745f96e,0xf4d0f5a1,0xf5b0f4e7,0xf8abf6ea,0xfcc8fab9,0x00abfec4,0x039d0249,0x054404a1,
0x05ae059f,0x051d056d,0x03db049b,0x02610321,0x00fb01b2,0xffd10049,0xfef9ff52,0xfe6bfeaf,
0xfe68fe6b,0xfe71fe60,0xfeb5fe89,0xff14feeb,0xff64ff34,0xffc2ff93,0xffefffda,0x00200014,
0x0044003b,0x00460035,0x003b0049,0x004c0041,0x0026002f,0x00140035,0x002c0014,0x0002000b,
0xfff5000b,0x000e000e,0xfff8ffef,0x00050008,0x0668fff5,0x119613ae,0x038802d7,0x07c50a26,
0x03a904ee,0x02b602dd,0x033e02e0,0x0362034d,0x034d0365,0x02aa0300,0x01ca0240,0x00f20177,
0x000e0070,0xff6dffce,0xfecdff02,0xfe66fe8f,0xfe01fe27,0xfdbdfdf2,0xfdb4fdab,0xfd73fd9f,
0xfda8fd91,0xfda2fd85,0xfd94fd9f,0xfdc0fdbd,0xfde0fdc6,0xfde9fdef,0xfe1ffdf8,0xfe07fe22,
0xfe42fe3f,0xfdf2fe5d,0x7fff1569,0xcc9f6a9f,0x115edc7d,0xf8e9018f,0xecd7eed7,0xf0aaed6b,
0xf64af36d,0xfba9f8cc,0x015cfe51,0x062a0419,0x0809077e,0x06860790,0x02ee04ee,0xfea400e3,
0xfad7fc98,0xf800f942,0xf688f713,0xf64df641,0xf70af697,0xf876f7bc,0xfa2ef957,0xfbdefafa,
0xfd1dfc8c,0xfe57fdd2,0xfef6fe98,0xff32ff32,0xff6dff67,0xff58ff55,0xff2cff29,0xfedfff1d,
0xfee2fedf,0xfe9efeb2,0xfeaafebb,0xfeb2fe8f,0xfeaffeb5,0xfed0fec1,0xfee5fedf,0xff1dff02,
0xff26ff14,0xff46ff52,0xff6dff46,0xff76ff76,0xff8dff87,0xff9fff87,0xffabff9f,0xff9cffa8,
0xffaeffb4,0xffc8ffba,0xffb1ffba,0xffceffc5,0xffcbffbf,0xffc5ffd1,0xffdaffd7,0xffe6ffda,
0xffe0ffd1,0xffd4ffd4,0xffe0ffe6,0xffe90000,0xfff2ffd4,0xffe6fff8,0xffecffe6,0xfff2fff5,
0xffe9ffdd,0xfffb0005,0xffeffffb,0x0005ffef,0xfff5ffec,0xfff5fffe,0xffe6fffe,0x0000ffec,
0x0002fffe,0xffec0002,0x00020000,0x0020ffdd,0x0041ffe3,0xde6bf7a4,0x1751e75b,0x02461b7f,
0x063000dd,0x0ba4099e,0x08b50a59,0x04fd06bb,0x0130031e,0xfbe7feca,0xf716f951,0xf4bef56f,
0xf578f4c7,0xf8c0f6f3,0xfcd6faae,0x00b7feee,0x03880246,0x055504a1,0x059f058b,0x05110564,
0x03e70495,0x0258032d,0x00fb01b5,0xffd40058,0xfef6ff4f,0xfe83feaa,0xfe4bfe66,0xfe77fe51,
0xfeb2fea1,0xff1afed0,0xff5eff4f,0xffc8ff8a,0xffefffd7,0x002f001a,0x00320023,0x0044004f,
0x004c0044,0x003b002c,0x0023004c,0x002f001a,0x000b002c,0x000b0008,0x000b000b,0x0005fff5,
0xfff20008,0xfffbfffb,0xf9a3fffb,0xee67ec61,0xfc51fd2f,0xf85ef5ce,0xfc5afb0f,0xfd35fd32,
0xfccbfd20,0xfc92fca1,0xfcbcfca1,0xfd67fd06,0xfe24fdae,0xff11feaa,0xffe3ff78,0x009f003e,
0x012a00e6,0x01b8017a,0x01e701ca,0x02370222,0x025b025e,0x0284024f,0x0264026c,0x024f027e,
0x02640258,0x02520252,0x02170228,0x020b0220,0x01f301fc,0x01ed01d9,0x018601d3,0x011801f9,
0xf8200058,0xe54df5d4,0xcb39c251,0xf91eea53,0xf9acf948,0xfeebfd70,0x01ff0110,0x04eb0379,
0x0966072f,0x0dcd0bc1,0x0fcc0f27,0x0ef10fd2,0x0bc40d7a,0x07b909bf,0x03b20591,0x00d4022e,
0xff08ffcb,0xfe86fea7,0xfeeefe95,0xffe0ff4f,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,
};

static const AudioSynthWavetable::sample_data AKWF_0029_samples[1] = {
	{
		(int16_t*)sample_0_AKWF_0029_AKWF_0029, // sample
		true, // LOOP
		10, // LENGTH_BITS
		(1 << (32 - 10)) * WAVETABLE_CENTS_SHIFT(0) * 44100.0 / WAVETABLE_NOTE_TO_FREQUENCY(60) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)601 - 1) << (32 - 10), // MAX_PHASE
		((uint32_t)600 - 1) << (32 - 10), // LOOP_PHASE_END
		(((uint32_t)600 - 1) << (32 - 10)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(61.28 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(0.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
};

static const uint8_t AKWF_0029_ranges[] = {127, };

const AudioSynthWavetable::instrument_data AKWF_0029 = {1, AKWF_0029_ranges, AKWF_0029_samples };
