#include "AKWF_0066_samples.h"

static const uint32_t sample_0_AKWF_0066_AKWF_0066[384] = {
0x08a30207,0x15c80f3e,0x1a511835,0x1de91c33,0x20f21f7c,0x239d2252,0x260324d8,0x28342721,
0x2a3a293c,0x2c1d2b30,0x2de32d04,0x2f912ebd,0x3128305f,0x32ad31ed,0x34213369,0x358634d5,
0x36de3634,0x38293785,0x396a38cb,0x3aa03a06,0x3bcd3b37,0x3cf13c60,0x3e0d3d80,0x3f223e99,
0x40303faa,0x413740b4,0x423841b8,0x433442b6,0x442a43af,0x44bb44a3,0x44bb44bb,0x44bb44bb,
0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,
0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,
0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,
0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,
0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,
0x44bb44bb,0x44bb44bb,0x325b44bb,0xbd0dcc16,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,
0xbb9abb45,0xbc8fbc14,0xbd89bd0c,0xbe89be09,0xbf8fbf0c,0xc09bc014,0xc1aec123,0xc2c8c23a,
0xc3eac358,0xc515c47f,0xc649c5ae,0xc787c6e7,0xc8cfc82a,0xca24c978,0xcb86cad3,0xccf6cc3c,
0xce76cdb4,0xd009cf3d,0xd1b1d0da,0xd370d28d,0xd54cd45a,0xd749d646,0xd96ed856,0xdbc6da93,
0xde5edd08,0xe14ddfc8,0xe4bbe2f1,0xe8fae6b8,0xf41ced81,0x0152fab7,0x0e8807ed,0x17f71524,
0x1c011a1a,0x1f521dbb,0x222d20cc,0x24b7237b,0x270325e4,0x29202817,0x2b162a1f,0x2ceb2c04,
0x2ea62dcc,0x30492f7a,0x31d83113,0x33553299,0x34c2340e,0x36213573,0x377336cc,0x38ba3818,
0x39f53959,0x3b273a90,0x3c503bbd,0x3d713ce2,0x3e8a3dfe,0x3f9c3f14,0x40a64022,0x41aa4129,
0x42a9422a,0x43a24326,0x4496441d,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,
0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,0xddd344bb,0xbb45bed7,0xbb45bb45,
0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,
0xbb45bb45,0xbbb4bb45,0xbcaabc2e,0xbda5bd27,0xbea5be24,0xbfacbf28,0xc0b8c030,0xc1ccc141,
0xc2e7c258,0xc40ac377,0xc536c49f,0xc66bc5cf,0xc7a9c709,0xc8f3c84d,0xca49c99d,0xcbaccaf9,
0xcd1ecc63,0xcea0cddd,0xd035cf68,0xd1dfd108,0xd3a2d2bd,0xd581d48d,0xd782d67d,0xd9acd891,
0xdc09dad3,0xdea9dd50,0xe1a4e019,0xe524e34f,0xe981e72d,0xf586eeeb,0x02bdfc21,0x0ff30958,
0x1873160f,0x1c641a87,0x1fa51e15,0x22762119,0x24f923c0,0x273f2622,0x29572851,0x2b492a55,
0x2d1c2c36,0x2ed42dfb,0x30752fa7,0x3202313e,0x337d32c1,0x34e83435,0x36463599,0x379736f0,
0x38dc383b,0x3a17397b,0x3b483ab0,0x3c703bdd,0x3d8f3d01,0x3ea83e1c,0x3fb93f31,0x40c2403e,
0x41c64145,0x42c44246,0x43bd4341,0x44b04437,0x44bb44bb,0x44bb44bb,0x44bb44bb,0x44bb44bb,
0xbd6e44bb,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,
0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,
0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,
0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,
0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,
0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbb45bb45,0xbc21bba7,
0xbd19bc9d,0xbe16bd97,0xbf1abe97,0xc022bf9d,0xc132c0a9,0xc249c1bd,0xc368c2d7,0xc48fc3fa,
0xc5bec525,0xc6f8c65a,0xc83bc798,0xc98ac8e1,0xcae6ca37,0xcc50cb99,0xcdc8cd0a,0xcf53ce8b,
0xd0f1d01f,0xd2a5d1c8,0xd474d389,0xd661d566,0xd873d765,0xdab3d98d,0xdd2cdbe7,0xdff1de83,
0xe320e178,0xe6f2e4ef,0xee36e93d,0xfb6cf4d1,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,
};

static const AudioSynthWavetable::sample_data AKWF_0066_samples[1] = {
	{
		(int16_t*)sample_0_AKWF_0066_AKWF_0066, // sample
		true, // LOOP
		10, // LENGTH_BITS
		(1 << (32 - 10)) * WAVETABLE_CENTS_SHIFT(0) * 44100.0 / WAVETABLE_NOTE_TO_FREQUENCY(60) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)601 - 1) << (32 - 10), // MAX_PHASE
		((uint32_t)600 - 1) << (32 - 10), // LOOP_PHASE_END
		(((uint32_t)600 - 1) << (32 - 10)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(2399.11 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(0.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
};

static const uint8_t AKWF_0066_ranges[] = {127, };

const AudioSynthWavetable::instrument_data AKWF_0066 = {1, AKWF_0066_ranges, AKWF_0066_samples };
