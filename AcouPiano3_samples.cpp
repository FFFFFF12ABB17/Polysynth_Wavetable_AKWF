#include "AcouPiano3_samples.h"

static const uint32_t sample_0_AcouPiano3_SquareWaveC3[128] = {
0xa5ca9c2d,0x92239eac,0x6663d5db,0x49725bb5,0x5c7e3fb7,0x4b895206,0x53da53f6,0x55825438,
0x564d5704,0x573c567f,0x58bb57f2,0x5a2d597a,0x5b9c5ade,0x5cf65c4d,0x5e495d9e,0x5f975eeb,
0x617b6058,0x643d62f3,0x644463d6,0x63fb6529,0x691964bf,0x5dec6aa6,0x73f46774,0xb1972715,
0xd15e928f,0xb113b62d,0xb817b3bf,0xb087b279,0xb15cb346,0xaf81b010,0xadfdaf22,0xaca3ad47,
0xab1cabd4,0xa9bcaa69,0xa84ba903,0xa6fca79a,0xa5a1a643,0xa47aa4fd,0xa308a37f,0xa22aa2d2,
0xa0dca047,0x9aa8a32e,0xa3b09e44,0x908aa018,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,
};

static const uint32_t sample_1_AcouPiano3_CP70C3[256] = {
0xffe3fff0,0xffc8ffd5,0xffa7ffb4,0xff9fff9f,0xffaaffa5,0xffaaffac,0xffa6ffa7,0xff9fffa2,
0xffa7ff9f,0xffc8ffb7,0xffddffd7,0xffc8ffd6,0xffaaffb7,0xffa5ff9f,0xffc8ffb1,0x0000ffe6,
0x003b0020,0x006a0053,0x0042004d,0x018d00c8,0x02b002a8,0x052802dc,0x03af0540,0x040804f3,
0x0a3203cf,0x07400beb,0xfe9f0461,0x06390089,0x0a2a021f,0xf7c80e16,0x1718fb47,0xf0870bcc,
0x1bdef75b,0x252d43ae,0x926bc1e6,0x8e1f8b42,0xd066ade0,0xdb69e0db,0xdf73d87a,0xf15be6e9,
0xf654fbee,0xdde8e54c,0xed94e241,0xf669f84a,0xe531ec48,0xe764e3fa,0xfcb7f24d,0xfb50fc4d,
0x1259052e,0x0ee4172d,0x0139022e,0x19250aff,0x2f6c2946,0x26e82ac3,0x36192953,0x3acc423d,
0x075b1fa1,0x0351fb99,0x31301c73,0x4e394069,0x478750ab,0x2597399b,0x0e98181b,0x18c30786,
0x31052e72,0x35c532f4,0x1e00295e,0x35e627e1,0x26fe3275,0x2cb2270c,0x10062349,0x355d15c9,
0x1e733e1e,0x0e5001f6,0x2b8d28af,0x0ce319a1,0x19ab0de6,0x34dd2e42,0xfd3c1df8,0xe50ee76a,
0x207ffb73,0x4a4440cd,0x174b363f,0xdd67fa53,0xbce8c916,0xa862af23,0xb47ba9c1,0xdeb5c90f,
0xdeb2e449,0xd641da15,0xe601db74,0xe347e796,0xe42fe208,0xe6f7ea94,0xd3a4da4b,0xd013cb49,
0xfaf4e890,0xf59bffcb,0xe489e34f,0x0a88fb91,0x01e6092a,0xedd5f86c,0x1039f284,0x3faa3120,
0x33153dc5,0xfbe61ada,0xf168eb27,0x0b0c0207,0x358417ca,0x360d478f,0x1d901d9e,0x17b7270c,
0x0695ffb1,0x23081f21,0x086e11bf,0x2ffa18c1,0x2ea9384c,0x06421641,0x2ab81229,0x2adc346b,
0x0f761990,0x245d150e,0x33433159,0x02d1214c,0x0545f7a9,0x3bf81fce,0x341542a6,0xfc771bf1,
0xf572ed61,0x16a403b4,0x332427ab,0x4e77445c,0x2a31452c,0xd6c3003b,0xc2e2c3c1,0xc66ec3ac,
0xc441c857,0xd296c46c,0xe3d4e326,0xd6c5d937,0xf161e292,0xfe4afc57,0xe260f42b,0xe656dbe4,
0xf19af2ab,0xe3f3e915,0xe531e583,0x051cebec,0x13a418cd,0xee8dfcba,0xfa2bf42b,0x036ef6f4,
0x3e8824d4,0x33274133,0x1f90253d,0xfebe1635,0xf66fec97,0x2f8611f6,0x2991392f,0x2a551ffc,
0x322a34db,0x0840202a,0x0119fd3c,0x2a3414e3,0x18d1298d,0x07750a49,0x295e148f,0x23552fdc,
0xfa970e3f,0x0f33f8b2,0x31cf28a7,0x16352b22,0xe6a5f809,0x07f5f293,0x170d1330,0x1f3e1c12,
0x05341713,0xde77f443,0xd0b8c9d3,0x16d4f22d,0x2b222a6d,0x1ecd278d,0x00290e19,0xcaa8ed44,
0xa4aeaaf1,0xba6fb121,0xab39b4f5,0xa89ca9f5,0xb092a325,0xd325c9c8,0xbfb7ccbb,0xccd6bb8c,
0xd66ddaae,0xcc5ad003,0xbf7bc97d,0xb87bb1cf,0xecc0d427,0xe2e5f15e,0xd4bcd35a,0xd08ad8cf,
0xcfe1c904,0x0a16e5b8,0x2b24286f,0x06cc19be,0xfc17fc58,0xf4a3fcf4,0xe819e859,0x1266f91c,
0x37ca2d4c,0x0836257e,0x0029f8cf,0x184a1009,0x100319e0,0xec2ef8b4,0x1e6efd21,0x2d1d3342,
0x088a1afa,0xf9a5f8b0,0x26d8109d,0x205227c1,0x1dca1f03,0x00ec1311,0xf560f4af,0x1192fb0c,
0x447738c2,0x0d922b89,0xf880fe1e,0xe247ed9d,0xf554e61e,0x1b54062f,0x47ee340b,0x2bc14754,
0xf73f08b1,0xf528f65e,0xd16de7ab,0xc413c45e,0xb431bf9b,0xc3cab483,0xcf3dd0e6,0xc095c539,
0xe533ccee,0xef86f209,0xdbf9e66e,0xdc07da5f,0xcc2ad509,0xd717cb8b,0xf835eac0,0xefabf9a3,
0xce81dc71,0xdecad3d9,0xd759dda8,0xee9edb7a,0x298d0ebe,0x19be2b87,0x00000000,
};

static const uint32_t sample_2_AcouPiano3_SquareWaveC5[128] = {
0x4a9b25dd,0x3ecc4328,0xaa1a4a6c,0xa8bf89ed,0xa58a891f,0xd46b86d4,0x31d86084,0x41bd4a42,
0x4a6c4070,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static const uint32_t sample_3_AcouPiano3_CP70C4[128] = {
0x0712fd77,0xfe3306d1,0xff6df947,0x12ce0c18,0x0eb31185,0x09520d04,0x092e0752,0x1b130f08,
0x2e48266a,0x39083532,0x3e893a93,0x485a4130,0x3e6b4fec,0xdac51286,0xc4fdb996,0x030ae516,
0x35c11aee,0x57d75002,0x33f049b8,0x00541db0,0xfb72fe05,0xee7df715,0xcdf4dfc8,0xba71c021,
0xbd62bb30,0xbb55bdc2,0xb3fab746,0xb35cb2a6,0xba05b5da,0xc3f6c006,0xcae6c5b8,0xebffd829,
0x103f002a,0x21b71b5c,0x24d22403,0x2f1027f6,0x49773a62,0x69cf5a3c,0x7cd875aa,0x7ca57f79,
0x688d744e,0x4e1a5b8c,0x32dc4047,0x19ad2642,0x03040d25,0xfc96fdde,0xf3a1faa8,0xd47ce617,
0xb6c1c368,0xaea9b00b,0xb4bcb12e,0xb37fb603,0xad7eaf2b,0xb5f8b072,0xbe63baea,0xc660c1b5,
0xd8abcca5,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,
};

static const AudioSynthWavetable::sample_data AcouPiano3_samples[4] = {
	{
		(int16_t*)sample_0_AcouPiano3_SquareWaveC3, // sample
		true, // LOOP
		7, // LENGTH_BITS
		(1 << (32 - 7)) * WAVETABLE_CENTS_SHIFT(6) * 44100.0 / WAVETABLE_NOTE_TO_FREQUENCY(72) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)88 - 1) << (32 - 7), // MAX_PHASE
		((uint32_t)87 - 1) << (32 - 7), // LOOP_PHASE_END
		(((uint32_t)87 - 1) << (32 - 7)) - (((uint32_t)3 - 1) << (32 - 7)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(-21.7)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(32.02 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(18528.40 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(486.05 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-3.4)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(5.4 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.4 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_1_AcouPiano3_CP70C3, // sample
		true, // LOOP
		9, // LENGTH_BITS
		(1 << (32 - 9)) * WAVETABLE_CENTS_SHIFT(18) * 44100.0 / WAVETABLE_NOTE_TO_FREQUENCY(69) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)507 - 1) << (32 - 9), // MAX_PHASE
		((uint32_t)506 - 1) << (32 - 9), // LOOP_PHASE_END
		(((uint32_t)506 - 1) << (32 - 9)) - (((uint32_t)405 - 1) << (32 - 9)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(-4.5)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(6.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(11699.16 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(984.53 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-100.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(5.1 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.1 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_2_AcouPiano3_SquareWaveC5, // sample
		true, // LOOP
		5, // LENGTH_BITS
		(1 << (32 - 5)) * WAVETABLE_CENTS_SHIFT(-15) * 44100.0 / WAVETABLE_NOTE_TO_FREQUENCY(104) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)17 - 1) << (32 - 5), // MAX_PHASE
		((uint32_t)16 - 1) << (32 - 5), // LOOP_PHASE_END
		(((uint32_t)16 - 1) << (32 - 5)) - (((uint32_t)3 - 1) << (32 - 5)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(-18.7)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(32.02 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(18528.40 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(486.05 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-3.4)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(5.4 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.4 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_3_AcouPiano3_CP70C4, // sample
		true, // LOOP
		7, // LENGTH_BITS
		(1 << (32 - 7)) * WAVETABLE_CENTS_SHIFT(34) * 44100.0 / WAVETABLE_NOTE_TO_FREQUENCY(81) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)114 - 1) << (32 - 7), // MAX_PHASE
		((uint32_t)113 - 1) << (32 - 7), // LOOP_PHASE_END
		(((uint32_t)113 - 1) << (32 - 7)) - (((uint32_t)62 - 1) << (32 - 7)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(-4.5)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(6.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(4515.86 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(930.34 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-100.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(5.1 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.1 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
};

static const uint8_t AcouPiano3_ranges[] = {56, 60, 108, 127, };

const AudioSynthWavetable::instrument_data AcouPiano3 = {4, AcouPiano3_ranges, AcouPiano3_samples };
