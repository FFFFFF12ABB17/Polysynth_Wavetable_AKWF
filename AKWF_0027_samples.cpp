#include "AKWF_0027_samples.h"

static const uint32_t sample_0_AKWF_0027_AKWF_0027[384] = {
0xffe9fffe,0xffd3ffda,0xffdfffd5,0xffffffef,0xfd5eff7f,0xf806fa2f,0xdf22f6e8,0xbc8eb682,
0x30ddf658,0x54bf513e,0x27334395,0xedd6082f,0xd74cdcf2,0xe805dbf4,0x06aef795,0x17e51218,
0x123417a0,0xfffc0989,0xf2baf7d2,0xf40df185,0xffeef95b,0x0a79061d,0x0ac30c1a,0x016e06e2,
0xf6c2fba5,0xf313f3bb,0xf84af4c3,0x0159fcd0,0x071104fb,0x05e00752,0xffee032f,0xfa94fcda,
0xf9cdf986,0xfd78fb40,0x0218ffed,0x040d038d,0x02540395,0xfedf00a0,0xfca0fd72,0xfd22fc88,
0xff99fe3f,0x01dc00e4,0x02410255,0x00ce01b1,0xfeebffcf,0xfe1dfe52,0xfed4fe4e,0x004bff8c,
0x014800e9,0x01210159,0x011000e7,0x014c0165,0xffbe00a2,0xfea0feff,0xff10feae,0x0032ff9f,
0x00da00a3,0x009d00d4,0xfff1004a,0xff91ffad,0xfff9ffab,0x0150007c,0x19de0392,0x390a3d55,
0xd9430996,0xbb9abe45,0xe33acae5,0x10f0fc87,0x20651d2d,0x11a11bb8,0xf9890539,0xece1f0f5,
0xf21ced87,0x009af916,0x0ac206e9,0x096f0b8d,0x0001052f,0xf7d1fb2f,0xf7adf697,0xfef2fab7,
0x07260369,0x09df096d,0x05c40884,0xfecf0247,0xfa8afc11,0xfb9afa6b,0x003ffdb9,0xe62e029b,
0xa7c9acaf,0x31bae88b,0x64045d42,0x2b624ee0,0xe79f05f6,0xd08dd563,0xe654d76f,0x09c1f89b,
0x1c0e163e,0x13f51ae3,0xfe7e0993,0xefd2f549,0xf252eeed,0x0099f8ce,0x0cb607c5,0x0cab0e69,
0x01af080b,0xf583fb09,0xf19cf230,0xf7daf3b3,0x0231fd0f,0x086d0638,0x06b30887,0xffbb0381,
0xf9b4fc3a,0xf90df89c,0xfd68facf,0x02ab003a,0x04bb0441,0x02960419,0xfe940097,0xfc17fcfa,
0xfcccfc0d,0xffacfe1c,0x02360123,0x028f02b4,0x00d301df,0xfeacffad,0xfdd0fe04,0xfeb2fe12,
0x0063ff88,0x017a0113,0x013f0186,0x001700b9,0xff0bff7d,0xfee2fed5,0xff98ff2a,0x007f0013,
0x00e200c8,0x008b00ca,0xffdb0034,0xff66ff92,0xff7cff60,0xfff6ffb3,0x00670036,0x007c007f,
0x00330060,0xffd40001,0xffa9ffb5,0xffccffb2,0x0014ffef,0x00460033,0x003f0049,0x031b00d9,
0x07da061c,0x204008aa,0x42ce48bf,0xcf34095d,0xac39af40,0xd980bd7e,0x11e5f7ff,0x28122283,
0x1798237c,0xf9610841,0xe86fee22,0xee15e8b8,0x000ff6a4,0x0d1a0819,0x0bc00e45,0x00030680,
0xf5a2f9eb,0xf567f40d,0xfea7f941,0x0930045e,0x0ccd0c2a,0x079e0b1e,0xfea90324,0xf907fb14,
0xfa39f8c8,0x0019fce2,0x05610323,0x0620066a,0x027f04b0,0xfded0011,0xfc01fc7e,0xfdb7fc79,
0x0122ff67,0x0358028a,0x02d5036e,0x006501bb,0xfe2aff1e,0xfdc7fdb3,0xff37fe56,0x01130033,
0x01de01aa,0x012701ac,0xffb50072,0xfebcff1a,0xfe84feab,0xfdbdfdfc,0xff86fe57,0x01ab00c6,
0x01d20204,0x006c0138,0xff13ffa7,0xfed0fec9,0xff8fff1b,0x006c000a,0x0091009c,0xffbf0047,
0xfd1bfee8,0xc2a6e724,0xf4b6c599,0x413e257c,0x35cd449f,0x044e1da7,0xe324efb0,0xe405df9b,
0xfa4bedf2,0x0ec00609,0x128b1303,0x07370e1b,0xf952ffb4,0xf474f55d,0xfaa1f676,0x04a0ffc8,
0x095f080f,0x056c0861,0xfcc8013d,0xf6abf903,0xf76bf624,0xfd94fa1d,0x03d4010d,0x05970569,
0x20860476,0x5abb585a,0xcb32170f,0x96759dd7,0xd146ac33,0x195af8d4,0x33382d5c,0x1cdb2c77,
0xf679093e,0xe17de872,0xe92be21e,0x0070f443,0x11670adc,0x0fde1305,0x00b80925,0xf2dbf8af,
0xf1bdf06c,0xfcf3f64d,0x0a550424,0x0f5d0e4c,0x09520d82,0xfe4003d4,0xf711f9b9,0xf860f6a9,
0xffb1fbaa,0x0671038d,0x079707d8,0x032905de,0xfd68001f,0xfadffb8d,0xfcedfb67,0x0139ff08,
0x041b0308,0x03950447,0x0092023c,0xfdbcfef6,0xfd2efd1e,0xfef0fdda,0x014b002d,0x0259020f,
0x01820223,0xffb400a1,0xfe73feed,0xfe9afe58,0xffcfff22,0x00fa0078,0x013a013e,0x008200f4,
0xff86fffe,0xff0eff31,0xff60ff21,0x001cffbb,0x00a2006e,0x009500ae,0x0016005d,0xff98ffcf,
0xff79ff7a,0xffc2ff94,0x002afff8,0x005e004e,0x003e0057,0xfff00018,0xffb7ffce,0xffbbffb1,
0xffeeffd1,0x0023000c,0x00310030,0x00140026,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,
};

static const AudioSynthWavetable::sample_data AKWF_0027_samples[1] = {
	{
		(int16_t*)sample_0_AKWF_0027_AKWF_0027, // sample
		true, // LOOP
		10, // LENGTH_BITS
		(1 << (32 - 10)) * WAVETABLE_CENTS_SHIFT(0) * 44100.0 / WAVETABLE_NOTE_TO_FREQUENCY(60) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)601 - 1) << (32 - 10), // MAX_PHASE
		((uint32_t)600 - 1) << (32 - 10), // LOOP_PHASE_END
		(((uint32_t)600 - 1) << (32 - 10)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(61.28 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(0.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
};

static const uint8_t AKWF_0027_ranges[] = {127, };

const AudioSynthWavetable::instrument_data AKWF_0027 = {1, AKWF_0027_ranges, AKWF_0027_samples };
