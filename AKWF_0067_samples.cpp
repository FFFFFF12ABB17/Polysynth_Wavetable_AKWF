#include "AKWF_0067_samples.h"

static const uint32_t sample_0_AKWF_0067_AKWF_0067[384] = {
0x028d005d,0x06a404a4,0x0a61088d,0x0dcb0c20,0x10e90f63,0x13c2125e,0x165d1517,0x18bd1794,
0x1aea19da,0x1ce61bed,0x1eb61dd3,0x205e1f8e,0x21e12124,0x23432296,0x248623e8,0x25ad251d,
0x26bb2637,0x27b22739,0x28932825,0x296128fc,0x2a1d29c1,0x2ac82a74,0x2b652b18,0x2bf42bae,
0x2c772c37,0x2cef2cb4,0x2d5c2d27,0x2dc02d8f,0x2e1b2dee,0x2e6e2e46,0x2eba2e95,0x2f002ede,
0x2f3f2f20,0x2f792f5d,0x2fae2f94,0x2fdf2fc7,0x300b2ff5,0x30333020,0x30583046,0x307a306a,
0x3099308a,0x30b530a7,0x30cf30c2,0x30e630db,0x30fc30f1,0x310f3106,0x31213118,0x3132312a,
0x31403139,0x314e3147,0x315b3154,0x31663160,0x3170316b,0x317a3175,0x3183317e,0x318b3187,
0x3192318e,0x31983195,0x319e319b,0x31a431a1,0x31a931a7,0x31ae31ab,0x31b231b0,0x31b631b4,
0x31b931b8,0x31bc31bb,0x31bf31be,0x31c231c1,0x31c531c3,0x31c731c6,0x31c931c8,0x31cb31ca,
0x31cc31cc,0x31ce31cd,0x31cf31cf,0x31d131d0,0x31d231d1,0x31d331d2,0x31d431d3,0x31d531d4,
0x31d631d5,0x31d631d6,0x31d731d7,0x31d831d7,0x31d831d8,0x31d931d9,0x31d931d9,0x31da31da,
0x31da31da,0x31db31da,0x31db31db,0x31db31db,0x31db31db,0x31dc31dc,0x31dc31dc,0x31dc31dc,
0x31dc31dc,0x31dd31dc,0x31dd31dd,0x31dd31dd,0x31dd31dd,0x31dd31dd,0x31dd31dd,0x31dd31dd,
0x31dd31dd,0x31dd31dd,0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,
0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,
0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,
0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,
0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x31de31de,0x2faa31de,0x273c2b5b,
0x1f88234b,0x187e1bef,0x12111535,0x0c310f10,0x06d40973,0x01ed0452,0xfd73ffa3,0xf95cfb5c,
0xf59ff773,0xf235f3e0,0xef17f09d,0xec3eeda2,0xe9a3eae9,0xe743e86c,0xe516e626,0xe31ae413,
0xe14ae22d,0xdfa2e072,0xde1fdedc,0xdcbddd6a,0xdb7adc18,0xda53dae3,0xd945d9c9,0xd84ed8c7,
0xd76dd7db,0xd69fd704,0xd5e3d63f,0xd538d58c,0xd49bd4e8,0xd40cd452,0xd389d3c9,0xd311d34c,
0xd2a4d2d9,0xd240d271,0xd1e5d212,0xd192d1ba,0xd146d16b,0xd100d122,0xd0c1d0e0,0xd087d0a3,
0xd052d06c,0xd021d039,0xcff5d00b,0xcfcdcfe0,0xcfa8cfba,0xcf86cf96,0xcf67cf76,0xcf4bcf59,
0xcf31cf3e,0xcf1acf25,0xcf04cf0f,0xcef1cefa,0xcedfcee8,0xcececed6,0xcec0cec7,0xceb2ceb9,
0xcea5ceac,0xce9acea0,0xce90ce95,0xce86ce8b,0xce7dce82,0xce75ce79,0xce6ece72,0xce68ce6b,
0xce62ce65,0xce5cce5f,0xce57ce59,0xce52ce55,0xce4ece50,0xce4ace4c,0xce47ce48,0xce44ce45,
0xce41ce42,0xce3ece3f,0xce3bce3d,0xce39ce3a,0xce37ce38,0xce35ce36,0xce34ce34,0xce32ce33,
0xce31ce31,0xce2fce30,0xce2ece2f,0xce2dce2e,0xce2cce2d,0xce2bce2c,0xce2ace2b,0xce2ace2a,
0xce29ce29,0xce28ce29,0xce28ce28,0xce27ce27,0xce27ce27,0xce26ce26,0xce26ce26,0xce25ce26,
0xce25ce25,0xce25ce25,0xce25ce25,0xce24ce24,0xce24ce24,0xce24ce24,0xce24ce24,0xce23ce24,
0xce23ce23,0xce23ce23,0xce23ce23,0xce23ce23,0xce23ce23,0xce23ce23,0xce23ce23,0xce23ce23,
0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,
0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,
0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,
0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,
0xce22ce22,0xce22ce22,0xce22ce22,0xce22ce22,0xd056ce22,0xd8c4d4a5,0xe078dcb5,0xe782e411,
0xedefeacb,0xf3cff0f0,0xf92cf68d,0xfe13fbae,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,
};

static const AudioSynthWavetable::sample_data AKWF_0067_samples[1] = {
	{
		(int16_t*)sample_0_AKWF_0067_AKWF_0067, // sample
		true, // LOOP
		10, // LENGTH_BITS
		(1 << (32 - 10)) * WAVETABLE_CENTS_SHIFT(0) * 44100.0 / WAVETABLE_NOTE_TO_FREQUENCY(60) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)601 - 1) << (32 - 10), // MAX_PHASE
		((uint32_t)600 - 1) << (32 - 10), // LOOP_PHASE_END
		(((uint32_t)600 - 1) << (32 - 10)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(2399.11 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(0.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
};

static const uint8_t AKWF_0067_ranges[] = {127, };

const AudioSynthWavetable::instrument_data AKWF_0067 = {1, AKWF_0067_ranges, AKWF_0067_samples };
