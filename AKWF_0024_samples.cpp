#include "AKWF_0024_samples.h"

static const uint32_t sample_0_AKWF_0024_AKWF_0024[384] = {
0x1939024f,0x41ce2d10,0x611d521e,0x72816b26,0x74e57533,0x6a6270e0,0x570b6178,0x3f814b7d,
0x27ec337e,0x13381d13,0x03030a80,0xf7bdfcc5,0xf0fbf3d8,0xedceef02,0xed21ed39,0xede5ed62,
0xef43ee8b,0xf0a3eff9,0xf1b4f13a,0xf256f213,0xf294f280,0xf28cf295,0xf269f27c,0xf253f25a,
0xf269f257,0xf2bdf28a,0xf358f302,0xf438f3bf,0xf550f4be,0xf696f5ee,0xf7f7f744,0xf964f8ac,
0xfacefa1a,0xfc2bfb7f,0xfd72fcd1,0xfe9dfe0b,0xffa8ff26,0x00930021,0x015e00fc,0x020801b6,
0x02930252,0x030302ce,0x0356032f,0x03910376,0x03b403a5,0x03c103bd,0x03bc03c1,0x03a503b3,
0x03800395,0x034e0369,0x03120330,0x02cc02f0,0x028102a8,0x0233025a,0x01e1020b,0x019101b9,
0x01410168,0x00f4011b,0x00ab00cf,0x00670088,0x00290048,0xfff2000d,0xffc1ffd8,0xff97ffab,
0xff72ff84,0xff55ff64,0xff3fff4a,0xff2fff36,0xff25ff29,0xff1fff20,0xff1fff1f,0xff23ff20,
0xff2bff27,0xff36ff31,0xff43ff3d,0xff53ff4b,0xff65ff5c,0xff78ff6e,0xff8aff81,0xff9dff94,
0xffb0ffa7,0xffc1ffb9,0xffd3ffcb,0xffe3ffdb,0xfff3ffeb,0x0000fffa,0x000c0005,0x00150011,
0x001e001a,0x00250022,0x002c0029,0x0030002d,0x00320031,0x00340034,0x00340034,0x00340034,
0x00320032,0x00300031,0x002d002e,0x0029002a,0x00250028,0x00210024,0x001d001e,0x0018001a,
0x00140016,0x00100011,0x000c000d,0x00080009,0x00040006,0x00010002,0xffff0000,0xfffcfffe,
0xfffafffb,0xfff8fff8,0xfff7fff7,0xfff6fff6,0xfff4fff4,0xfff4fff4,0xfff4fff4,0xfff4fff4,
0xfff4fff4,0xfff4fff4,0xfff6fff6,0xfff7fff6,0xfff7fff7,0xfff8fff8,0xfffafff8,0xfffafffa,
0xfffbfffb,0xfffcfffc,0xfffefffc,0xfffefffe,0xffffffff,0x0000ffff,0x00000000,0x000c0002,
0x002e0012,0x00900049,0x018e00d3,0x03cc0232,0x083c052b,0x10030ad8,0x1be7144c,0x2ba021fc,
0x3d1f32fd,0x4c494437,0x62a150d4,0x67bd703a,0x45de5a77,0x15053014,0xe015fbc7,0xb161c887,
0x907a9fa7,0x80fd86f9,0x826e8001,0x91488898,0xa86d9c33,0xc2adb57a,0xdbc9cf96,0xf0f1e6f7,
0x00d3f994,0x0b5506b9,0x11270ec4,0x136c12a7,0x135d139c,0x121512d1,0x106a1141,0x0eed0fa1,
0x0de20e57,0x0d5c0d8f,0x0d430d44,0x0d6c0d53,0x0dab0d8c,0x0dd50dc5,0x0dc90dd6,0x0d740da9,
0x0cd30d2d,0x0bea0c67,0x0ac40b5e,0x09730a20,0x080808c0,0x0693074d,0x052205d9,0x03c1046e,
0x0277031a,0x014c01de,0x004000c2,0xff57ffc8,0xfe8efeef,0xfde5fe36,0xfd5bfd9b,0xfcedfd20,
0xfc9bfcc1,0xfc62fc7b,0xfc40fc4d,0xfc34fc37,0xfc3bfc35,0xfc53fc44,0xfc7afc64,0xfcadfc92,
0xfcecfccc,0xfd32fd0d,0xfd7efd57,0xfdcefda6,0xfe20fdf7,0xfe72fe49,0xfec3fe9a,0xff0ffee9,
0xff59ff35,0xff9dff7c,0xffdbffbd,0x0012fff8,0x0044002c,0x006f0059,0x00920082,0x00af00a0,
0x00c500ba,0x00d500ce,0x00e000da,0x00e400e2,0x00e400e4,0x00de00e2,0x00d600db,0x00cb00d1,
0x00bd00c5,0x00ad00b6,0x009b00a4,0x00880092,0x0076007f,0x0063006c,0x00500059,0x003d0047,
0x002c0034,0x001c0024,0x000d0014,0x00000006,0xfff4fffa,0xffeaffef,0xffe0ffe4,0xffdaffdc,
0xffd4ffd7,0xffd0ffd2,0xffccffce,0xffcbffcc,0xffcbffcb,0xffccffcb,0xffceffcc,0xffd0ffcf,
0xffd3ffd2,0xffd7ffd4,0xffdbffd8,0xffdfffdc,0xffe3ffe2,0xffe8ffe6,0xffecffea,0xfff0ffef,
0xfff4fff3,0xfff8fff7,0xfffcfffb,0xfffffffe,0x00020001,0x00040004,0x00060005,0x00080008,
0x000a0009,0x000a000a,0x000c000c,0x000c000c,0x000c000c,0x000c000c,0x000c000c,0x000c000c,
0x000a000a,0x0009000a,0x00090009,0x00080008,0x00060008,0x00060006,0x00050005,0x00040004,
0x00020004,0x00020002,0x00010001,0x00000001,0xfffe0000,0xfff3fffe,0xffc5ffea,0xff51ffa8,
0xfe26ff02,0xfb8cfd66,0xf67cf9f9,0xedd2f38d,0xe0dee918,0xd037da54,0xbe72c898,0xb021b786,
0xaad4ac64,0xb32bacb9,0xcab0bc14,0xeed2da22,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,
};

static const AudioSynthWavetable::sample_data AKWF_0024_samples[1] = {
	{
		(int16_t*)sample_0_AKWF_0024_AKWF_0024, // sample
		true, // LOOP
		10, // LENGTH_BITS
		(1 << (32 - 10)) * WAVETABLE_CENTS_SHIFT(0) * 44100.0 / WAVETABLE_NOTE_TO_FREQUENCY(60) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)601 - 1) << (32 - 10), // MAX_PHASE
		((uint32_t)600 - 1) << (32 - 10), // LOOP_PHASE_END
		(((uint32_t)600 - 1) << (32 - 10)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(61.28 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(0.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
};

static const uint8_t AKWF_0024_ranges[] = {127, };

const AudioSynthWavetable::instrument_data AKWF_0024 = {1, AKWF_0024_ranges, AKWF_0024_samples };
