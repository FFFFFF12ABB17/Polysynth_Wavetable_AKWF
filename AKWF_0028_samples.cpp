#include "AKWF_0028_samples.h"

static const uint32_t sample_0_AKWF_0028_AKWF_0028[384] = {
0x04b100ee,0x0c2008a9,0x12030f37,0x174214ac,0x1c7219d8,0x21ac1f0c,0x26e22448,0x2bfc2973,
0x30e12e75,0x3582333c,0x39da37ba,0x3de43beb,0x419e3fc9,0x450a435e,0x482a46a5,0x4b0849a3,
0x4da44c5f,0x50034edc,0x522c511d,0x5420532c,0x55e55509,0x578356b9,0x58f75840,0x5a4959a4,
0x5b7b5ae4,0x5c905c07,0x5d895d10,0x5e6e5dfe,0x5f395ed5,0x5ff25f99,0x609b604a,0x613360e7,
0x61bc6179,0x623761fb,0x62a86271,0x630c62da,0x6368633a,0x63bb6391,0x640663e0,0x64496428,
0x64866467,0x64bc64a2,0x64ee64d6,0x651b6506,0x65456530,0x65696556,0x658a657a,0x65a7659a,
0x65c365b7,0x65dd65d0,0x65f365e6,0x660765fb,0x6618660f,0x66286620,0x66366631,0x6646663e,
0x6650664a,0x665b6657,0x66646660,0x666d6669,0x66756671,0x667d6678,0x66846681,0x668a6685,
0x668e668d,0x66936692,0x669a6697,0x669c669a,0x669f669f,0x66a366a3,0x66a766a4,0x66a866a7,
0x66aa66ab,0x66ac66ab,0x66af66af,0x66b066b0,0x66b266b3,0x66b466b3,0x66b566b4,0x66b866b5,
0x66b766b6,0x66b866b8,0x66b966b9,0x66b966b9,0x66bb66bc,0x66bc66bb,0x66bd66bc,0x66bd66bd,
0x66bd66bd,0x66bd66bd,0x66bd66bd,0x66bd66bd,0x66bd66bd,0x66be66bf,0x66bf66bf,0x66c066bf,
0x66c066c0,0x66c066c0,0x66c066c0,0x66c066c0,0x66c066c0,0x66c066c0,0x66c066c0,0x66c066c0,
0x66c066c0,0x66c066c0,0x66c066c0,0x66c066c0,0x66c066c0,0x66c066c0,0x66c066c0,0x66c066c0,
0x66c066c0,0x66c066c0,0x66c066c0,0x66c066c0,0x66c066c0,0x66c066c0,0x66c066c0,0x6250655e,
0x5f8b606f,0x5ba05dba,0x57dc59ad,0x5460561f,0x50b65297,0x4cb94ec3,0x487a4aa1,0x4418464c,
0x3fb141e3,0x3b5e3d85,0x37323942,0x3334352d,0x2f70314d,0x2be42da4,0x28952a38,0x25812705,
0x22a6240d,0x1fff214b,0x1d8a1ec1,0x1b481c64,0x19311a34,0x17401834,0x15791659,0x13d414a2,
0x124f130e,0x10e81199,0x0f9e1044,0x0e710f04,0x0b520dde,0x011403a8,0xfb4fff12,0xf3e0f757,
0xedfdf0c9,0xe8beeb54,0xe38ee628,0xde54e0f4,0xd91edbb8,0xd404d68d,0xcf1fd18b,0xca7eccc4,
0xc626c846,0xc21cc415,0xbe62c037,0xbaf6bca2,0xb7d6b95b,0xb4f8b65d,0xb25cb3a1,0xaffdb124,
0xadd4aee3,0xabe0acd4,0xaa1baaf7,0xa87da947,0xa709a7c0,0xa5b7a65c,0xa485a51c,0xa370a3f9,
0xa277a2f0,0xa192a202,0xa0c7a12b,0xa00ea067,0x9f659fb6,0x9ecd9f19,0x9e449e87,0x9dc99e05,
0x9d589d8f,0x9cf49d26,0x9c989cc6,0x9c459c6f,0x9bfa9c20,0x9bb79bd8,0x9b7a9b99,0x9b449b5e,
0x9b129b2a,0x9ae59afa,0x9abb9ad0,0x9a979aaa,0x9a769a86,0x9a599a66,0x9a3d9a49,0x9a239a30,
0x9a0d9a1a,0x99f99a05,0x99e899f1,0x99d899e0,0x99ca99cf,0x99ba99c2,0x99b099b6,0x99a599a9,
0x999c99a0,0x99939997,0x998b998f,0x99839988,0x997c997f,0x9976997b,0x99729973,0x996d996e,
0x99669969,0x99649966,0x99619961,0x995d995d,0x9959995c,0x99589959,0x99569955,0x99549955,
0x99519951,0x99509950,0x994e994d,0x994c994d,0x994b994c,0x9948994b,0x9949994a,0x99489948,
0x99479947,0x99479947,0x99459944,0x99449945,0x99439944,0x99439943,0x99439943,0x99439943,
0x99439943,0x99439943,0x99439943,0x99429941,0x99419941,0x99409941,0x99409940,0x99409940,
0x99409940,0x99409940,0x99409940,0x99409940,0x99409940,0x99409940,0x99409940,0x99409940,
0x99409940,0x99409940,0x99409940,0x99409940,0x99409940,0x99409940,0x99409940,0x99409940,
0x99409940,0x99409940,0x99409940,0x99409940,0x99409940,0x9db09aa2,0xa0759f91,0xa460a246,
0xa824a653,0xaba0a9e1,0xaf4aad69,0xb347b13d,0xb786b55f,0xbbe8b9b4,0xc04fbe1d,0xc4a2c27b,
0xc8cec6be,0xcccccad3,0xd090ceb3,0xd41cd25c,0xd76bd5c8,0xda7fd8fb,0xdd5adbf3,0xe001deb5,
0xe276e13f,0xe4b8e39c,0xe6cfe5cc,0xe8c0e7cc,0xea87e9a7,0xec2ceb5e,0xedb1ecf2,0xef18ee67,
0xf062efbc,0xf18ff0fc,0xf4aef222,0xfeecfc58,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,
};

static const AudioSynthWavetable::sample_data AKWF_0028_samples[1] = {
	{
		(int16_t*)sample_0_AKWF_0028_AKWF_0028, // sample
		true, // LOOP
		10, // LENGTH_BITS
		(1 << (32 - 10)) * WAVETABLE_CENTS_SHIFT(0) * 44100.0 / WAVETABLE_NOTE_TO_FREQUENCY(60) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)601 - 1) << (32 - 10), // MAX_PHASE
		((uint32_t)600 - 1) << (32 - 10), // LOOP_PHASE_END
		(((uint32_t)600 - 1) << (32 - 10)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(61.28 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(0.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
};

static const uint8_t AKWF_0028_ranges[] = {127, };

const AudioSynthWavetable::instrument_data AKWF_0028 = {1, AKWF_0028_ranges, AKWF_0028_samples };
