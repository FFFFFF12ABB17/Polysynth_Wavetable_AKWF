#include "AKWF_0082_samples.h"

static const uint32_t sample_0_AKWF_0082_AKWF_0082[384] = {
0x01f90032,0x057d03bd,0x08f3073a,0x0c590aa8,0x0fb00e06,0x12f91155,0x163e149b,0x198717e2,
0x1cd31b2d,0x20241e7b,0x238321d1,0x26fa253b,0x2a9028c3,0x2dd52c45,0x30e22f5b,0x33eb3267,
0x36e5356b,0x39c13857,0x3c7c3b23,0x3f113dcb,0x417f404d,0x43c542a8,0x45e244d9,0x47d546e1,
0x49a048bf,0x4b454a77,0x4cc64c0a,0x4e254d7a,0x4f664ec9,0x508a4ffb,0x51935112,0x5285520f,
0x536052f5,0x542653c5,0x54da5482,0x557d552e,0x561155c9,0x56975655,0x571056d5,0x577d5748,
0x57e057b0,0x583a580e,0x588b5863,0x58d458b0,0x591658f6,0x59525935,0x5988596d,0x59b959a1,
0x59e559cf,0x5a0d59f9,0x5a315a1f,0x5a515a41,0x5a6f5a60,0x5a895a7c,0x5aa15a96,0x5ab75aac,
0x5acb5ac1,0x5adc5ad4,0x5aec5ae4,0x5afb5af4,0x5b085b01,0x5b145b0e,0x5b1e5b19,0x5b285b23,
0x5b315b2c,0x5b385b35,0x5b3f5b3c,0x5b465b43,0x5b4c5b49,0x5b515b4e,0x5b565b53,0x5b5a5b58,
0x5b5e5b5c,0x5b615b60,0x5b645b63,0x5b675b66,0x5b6a5b69,0x5b6c5b6b,0x5b6e5b6d,0x5b705b6f,
0x5b725b71,0x5b735b73,0x5b755b74,0x5b765b75,0x5b775b77,0x5b785b78,0x5b795b79,0x5b7a5b79,
0x5b7b5b7a,0x5b7b5b7b,0x5b7c5b7c,0x5b7d5b7c,0x5b7d5b7d,0x5b7d5b7d,0x5b7e5b7e,0x5b7e5b7e,
0x5b7f5b7e,0x5b7f5b7f,0x5b7f5b7f,0x5b7f5b7f,0x5b805b80,0x5b805b80,0x5b805b80,0x5b805b80,
0x5b805b80,0x5b805b80,0x5b815b81,0x5b735b81,0x5b1c5b4e,0x5ab25ae8,0x5a395a78,0x59a659f3,
0x58f65952,0x58265892,0x573657b2,0x562856b3,0x54fa5595,0x53af5459,0x524852ff,0x50c7518b,
0x4f2d4ffd,0x4d7d4e58,0x4bb84c9d,0x49e04ace,0x47f548ed,0x45fa46fa,0x43ef44f7,0x41d442e3,
0x3fa940c0,0x3d6f3e8e,0x3b253c4c,0x38ca39fa,0x365d3796,0x33dc351f,0x31413292,0x2e842fe8,
0x2b6e2d11,0x27f129a5,0x24b32651,0x21672311,0x1dfd1fb6,0x1a7a1c3e,0x16e718b2,0x13491519,
0x0fa61178,0x0c000dd3,0x085d0a2e,0x04c1068e,0x012f02f7,0xfdaaff6b,0xfa33fbec,0xf6ccf87e,
0xf376f51f,0xf030f1d1,0xecfcee94,0xe9d8eb68,0xe6c5e84c,0xe3c2e542,0xe0d0e247,0xddecdf5c,
0xdb18dc80,0xd852d9b3,0xd599d6f4,0xd2ead441,0xd038d192,0xcd79ceda,0xcaa9cc14,0xc7f1c941,
0xc589c6b9,0xc32cc459,0xc0ddc202,0xbea4bfbd,0xbc86bd91,0xba87bb83,0xb8a5b992,0xb6e3b7c0,
0xb541b60e,0xb3beb47b,0xb25ab308,0xb114b1b3,0xafeab07c,0xaed9af5e,0xade1ae5a,0xacffad6d,
0xac31ac95,0xab76abd1,0xaaccab1f,0xaa32aa7d,0xa9a7a9eb,0xa928a966,0xa8b6a8ee,0xa84ea881,
0xa7f1a81e,0xa79ca7c5,0xa74fa774,0xa70aa72b,0xa6cba6e9,0xa692a6ae,0xa65fa678,0xa630a647,
0xa606a61b,0xa5e1a5f3,0xa5bea5cf,0xa59fa5af,0xa584a591,0xa56aa577,0xa554a55f,0xa53fa549,
0xa52ca535,0xa51ba524,0xa50ca514,0xa4ffa505,0xa4f2a4f8,0xa4e7a4ec,0xa4dda4e2,0xa4d4a4d8,
0xa4cba4cf,0xa4c4a4c8,0xa4bda4c1,0xa4b7a4ba,0xa4b2a4b4,0xa4ada4af,0xa4a8a4aa,0xa4a4a4a6,
0xa4a0a4a2,0xa49da49f,0xa49aa49c,0xa497a499,0xa495a496,0xa493a494,0xa491a492,0xa48fa490,
0xa48da48e,0xa48ca48d,0xa48ba48b,0xa489a48a,0xa488a489,0xa487a488,0xa487a487,0xa486a486,
0xa485a485,0xa484a485,0xa484a484,0xa483a483,0xa483a483,0xa482a483,0xa482a482,0xa482a482,
0xa481a481,0xa481a481,0xa481a481,0xa480a481,0xa480a480,0xa480a480,0xa480a480,0xa480a480,
0xa480a480,0xa47fa480,0xa47fa47f,0xa47fa47f,0xa4b0a48b,0xa51fa4e5,0xa59aa55b,0xa62ba5df,
0xa6dba67f,0xa7ada740,0xa8a2a823,0xa9b9a929,0xaaf2aa51,0xac4cab9b,0xadc5ad05,0xaf5cae8d,
0xb10eb032,0xb2d9b1f1,0xb4bab3c7,0xb6b0b5b3,0xb8b9b7b2,0xbad3b9c4,0xbcfebbe6,0xbf39be19,
0xc183c05c,0xc3dcc2ae,0xc646c50f,0xc8c1c781,0xcb4fca05,0xcdf4cc9e,0xd0b8cf51,0xd3c0d22d,
0xd74dd583,0xda9ad8f9,0xddeadc3f,0xe159df9e,0xe4e1e31b,0xe87ae6ac,0xec1eea4b,0xefc9edf3,
0xf377f1a0,0xf723f54d,0xfacaf8f7,0xfe67fc9a,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,
};

static const AudioSynthWavetable::sample_data AKWF_0082_samples[1] = {
	{
		(int16_t*)sample_0_AKWF_0082_AKWF_0082, // sample
		true, // LOOP
		10, // LENGTH_BITS
		(1 << (32 - 10)) * WAVETABLE_CENTS_SHIFT(0) * 44100.0 / WAVETABLE_NOTE_TO_FREQUENCY(60) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)601 - 1) << (32 - 10), // MAX_PHASE
		((uint32_t)600 - 1) << (32 - 10), // LOOP_PHASE_END
		(((uint32_t)600 - 1) << (32 - 10)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(2399.11 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(0.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
};

static const uint8_t AKWF_0082_ranges[] = {127, };

const AudioSynthWavetable::instrument_data AKWF_0082 = {1, AKWF_0082_ranges, AKWF_0082_samples };
